
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Text, Button, PhotoImage

entry_1 = None
entry_2 = None
entry_3 = None
entry_4 = None
entry_5 = None
entry_6 = None

import subprocess

import ctypes

def minimize_window(): #Provided by StackOverflow
    # Get a handle to the current window
    hwnd = ctypes.windll.user32.GetForegroundWindow()
    
    # Minimize the window
    ctypes.windll.user32.ShowWindow(hwnd, 6)  # 6 corresponds to SW_MINIMIZE

def restore_window(hwnd):
    # Restore the window
    ctypes.windll.user32.ShowWindow(hwnd, 9)  # 9 corresponds to SW_RESTORE

def run_python_file(file_path):
    try:
        hwnd = ctypes.windll.user32.GetForegroundWindow()  # Get the handle of the current window

        minimize_window()  # Minimize the current window

        # Launch the new script in a new Python process
        process = subprocess.Popen(["python", file_path])

        # Wait for the new script to finish
        out, err = process.communicate()

        # Restore the previous window
        restore_window(hwnd)
    except subprocess.CalledProcessError as e:
        print(f"Error: {e}")
    except FileNotFoundError:
        print("Error: Python interpreter not found. Please make sure Python is installed.")

def ButtonLoginClick_Execution():
    sScriptPath = r'C:\Users\Kai\Desktop\Project\Screen 3 - Login\build\gui.py'  
    run_python_file(sScriptPath)

#Find relative entry boxes
'''def set_text():
    text_to_set = "1"
    #entry_1.delete(0, Tk.END)  # Clear any existing text
    entry_1.insert(1.0, text_to_set)

    text_to_set = "2"
    #entry_2.delete(0, Tk.END)  # Clear any existing text
    entry_2.insert(1.0, text_to_set)

    text_to_set = "3"
    #entry_3.delete(0, Tk.END)  # Clear any existing text
    entry_3.insert(1.0, text_to_set)

    text_to_set = "4"
    #entry_4.delete(0, Tk.END)  # Clear any existing text
    entry_4.insert(1.0, text_to_set)

    text_to_set = "5"
    #entry_5.delete(0, Tk.END)  # Clear any existing text
    entry_5.insert(1.0, text_to_set)

    text_to_set = "6"
    #entry_6.delete(0, Tk.END)  # Clear any existing text
    entry_6.insert(1.0, text_to_set)'''

#Get inputs into variables 

sConfirmPassword = ""
sEmail = ""
sBirthday = ""
sPassword = ""
sUsername = ""
sFullName = ""

def get_text():
    sConfirmPassword = entry_1.get("1.0", 'end-1c')
    sEmail = entry_2.get("1.0", 'end-1c')
    sBirthday = entry_3.get("1.0", 'end-1c')
    sPassword = entry_4.get("1.0", 'end-1c')
    sUsername = entry_5.get("1.0", 'end-1c')
    sFullName = entry_6.get("1.0", 'end-1c')

# Procedure to write details to database

import sqlite3

def input_database():   
   # Connect to the SQLite database (or create a new one if it doesn't exist)
   conn = sqlite3.connect(r'C:\Users\Kai\Desktop\Project\Language_Learner.sqlite3')

   # Create a cursor object to interact with the database
   cursor = conn.cursor()

   # Create a table if it doesn't exist
   cursor.execute("""
       CREATE TABLE IF NOT EXISTS Users (
           Username TEXT PRIMARY KEY,
           FullName TEXT,
           Birthday TEXT,
           Email TEXT,
           Password TEXT
       )
   """)

   # user details  
   sConfirmPassword = entry_1.get("1.0",'end-1c')
   sEmail = entry_2.get("1.0",'end-1c')
   sBirthday = entry_3.get("1.0",'end-1c')
   sPassword = entry_4.get("1.0",'end-1c')
   sUsername = entry_5.get("1.0",'end-1c')
   sFullName = entry_6.get("1.0",'end-1c')
   
   # Insert data into the table
   cursor.execute("INSERT INTO Users (Username, FullName, Birthday, Email, Password) VALUES (?, ?, ?, ?, ?)", (sUsername, sFullName, sBirthday, sEmail, sPassword))

   # Commit the changes and close the connection
   conn.commit()
   conn.close()

   print("Details added successfully.")

#Algo to check if entries are empty
def is_entry_empty(entry_widget):
    text = entry_widget.get("1.0", 'end-1c')
    return not bool(text)

bFilledEntryBoxes = True

def check_entry_boxes():
    global bFilledEntryBoxes 
    bFilledEntryBoxes = True

    if is_entry_empty(entry_1): 
        bFilledEntryBoxes = False
    if is_entry_empty(entry_2):
        bFilledEntryBoxes = False
    if is_entry_empty(entry_3): 
        bFilledEntryBoxes = False
    if is_entry_empty(entry_4): 
        bFilledEntryBoxes = False
    if is_entry_empty(entry_5): 
        bFilledEntryBoxes = False
    if is_entry_empty(entry_6): 
        bFilledEntryBoxes = False

#Is the email and username unique?
from tkinter import messagebox

bUniqueEmailAndUsername = True

def check_unique_email_username():
    global bUniqueEmailAndUsername
    bUniqueEmailAndUsername = True

    conn = sqlite3.connect(r'C:\Users\Kai\Desktop\Project\Language_Learner.sqlite3')

    cursor = conn.cursor()

    sUser = entry_5.get("1.0",'end-1c')
    sMail = entry_2.get("1.0",'end-1c')

    cursor.execute("SELECT * FROM Users WHERE Username = ? OR Email = ?", (sUser, sMail))

    # Fetch the result
    bResult = cursor.fetchone()

    if bResult is not None:
        bUniqueEmailAndUsername = False
    
    conn.close()

#Passwords match??
bPasswordsMatch = True
def check_passwords_match():
    global bPasswordsMatch
    bPasswordsMatch = True
    global sPassword
    global sConfirmPassword
    sConfirmPassword = entry_1.get("1.0",'end-1c')
    sPassword = entry_4.get("1.0",'end-1c')

    if sPassword != sConfirmPassword:
        bPasswordsMatch = False
    
bDataIsValid = True
def Validation():
    global bDataIsValid 
    bDataIsValid = True

    check_entry_boxes()

    if bFilledEntryBoxes == False:
        bDataIsValid = False
        messagebox.showerror("Error", "Not all fields are filled out. Please ensure that you have completed all fields.")
    
    check_unique_email_username()

    if bUniqueEmailAndUsername == False:
        bDataIsValid = False
        messagebox.showerror("Error", "Account details are not unique. Your username OR email is already attached to another user's account. Please input a unique username and email.")
    
    check_passwords_match()

    if bPasswordsMatch == False:
        bDataIsValid = False
        messagebox.showerror("Error", "Passwords do not match. Please ensure that the inputted passwords match.")

#clear entry boxes
def clear_entry_boxes():
    entry_1.delete("1.0", 'end-1c')
    entry_2.delete("1.0", 'end-1c')
    entry_3.delete("1.0", 'end-1c')
    entry_4.delete("1.0", 'end-1c')
    entry_5.delete("1.0", 'end-1c')
    entry_6.delete("1.0", 'end-1c')

# Procedure for Button to submit details

def ButtonSubmit_Click():
    Validation()

    if bDataIsValid == True:
        input_database()
        messagebox.showinfo("Information", "Account created successfully. Congratulations, your account has been created. You may proceed to login.")
        clear_entry_boxes()
        ButtonLoginClick_Execution()


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Kai\Desktop\Project\Screen 2 - Registration\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

# Get the screen width and height
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

# Calculate the x and y coordinates to center the window
x = (screen_width - 640) // 2  # 640 is the window width
y = (screen_height - 380) // 2  # 320 is the window height

# Set the window geometry
window.geometry("640x380+{}+{}".format(x, y))

#window.geometry("640x380")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 380,
    width = 640,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    229.0,
    351.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    320.0,
    324.0,
    image=image_image_2
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=ButtonSubmit_Click,
    relief="flat"
)
button_1.place(
    x=205.0,
    y=276.0,
    width=229.0,
    height=35.0
)

canvas.create_text(
    305.0,
    27.0,
    anchor="nw",
    text="Sign up",
    fill="#491ACF",
    font=("RobotoRoman SemiBold", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    471.5,
    245.5,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=366.0,
    y=228.0,
    width=211.0,
    height=33.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    471.5,
    182.5,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=366.0,
    y=165.0,
    width=211.0,
    height=33.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    471.5,
    121.5,
    image=entry_image_3
)
entry_3 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=366.0,
    y=104.0,
    width=211.0,
    height=33.0
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    161.5,
    245.5,
    image=entry_image_4
)
entry_4 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=56.0,
    y=228.0,
    width=211.0,
    height=33.0
)

entry_image_5 = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    161.5,
    182.5,
    image=entry_image_5
)
entry_5 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_5.place(
    x=56.0,
    y=165.0,
    width=211.0,
    height=33.0
)

entry_image_6 = PhotoImage(
    file=relative_to_assets("entry_6.png"))
entry_bg_6 = canvas.create_image(
    161.5,
    121.5,
    image=entry_image_6
)
entry_6 = Text(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_6.place(
    x=56.0,
    y=104.0,
    width=211.0,
    height=33.0
)

canvas.create_text(
    417.0,
    207.0,
    anchor="nw",
    text="Confirm Password",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

canvas.create_text(
    452.0,
    145.0,
    anchor="nw",
    text="Email",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

canvas.create_text(
    452.0,
    83.0,
    anchor="nw",
    text="Birthday",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

canvas.create_text(
    129.0,
    207.0,
    anchor="nw",
    text="Password",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

canvas.create_text(
    129.0,
    145.0,
    anchor="nw",
    text="Username",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

canvas.create_text(
    129.0,
    84.0,
    anchor="nw",
    text="Full Name",
    fill="#696969",
    font=("MontserratRoman Light", 11 * -1)
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    341.0,
    183.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    30.0,
    247.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    341.0,
    247.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    30.0,
    183.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    341.0,
    121.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    30.0,
    121.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    119.0,
    37.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    534.0,
    37.0,
    image=image_image_10
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=ButtonLoginClick_Execution,
    relief="flat"
)
button_2.place(
    x=366.0,
    y=344.0,
    width=119.0,
    height=15.0
)
window.resizable(False, False)
window.mainloop()
